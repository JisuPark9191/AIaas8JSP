<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.prac.myapp.addr.dao.IAddrRepository">
    <resultMap id="getAddr" type="com.prac.myapp.addr.model.AddrVO">
        <result property="id" column="ID"/>
        <result property="name" column="NAME"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="address" column="ADDRESS"/>
        <result property="addrGroup" column="ADDRGROUP"/>
    </resultMap>
    
    <select id="getAddrCount" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM ADDRESS WHERE ID = #{value}
    </select>
    
    <select id="getAddrList" parameterType="map" resultType="com.prac.myapp.addr.model.AddrVO">
        SELECT * FROM ADDRESS WHERE ID = #{id}
        <choose>
            <when test="value=='date'">ORDER BY ID</when>
            <when test="value=='name'">ORDER BY NAME</when>
            <when test="value=='addrGroup'">ORDER BY ADDRGROUP</when>
        </choose>
        <if test="orderby=='ascend'">ASC</if>
        <if test="orderby=='descend'">DESC</if>
    </select>
    
    <select id="getAddrNameList" parameterType="map" resultType="com.prac.myapp.addr.model.AddrVO">
        SELECT * FROM ADDRESS WHERE ID=#{id} AND NAME=#{name}
    </select>
    
    <select id="getAddrInfo" parameterType="map" resultType="com.prac.myapp.addr.model.AddrVO">
        SELECT * FROM ADDRESS WHERE ID=#{id} AND PHONE=#{phone}
    </select>
    
    <update id="updateAddr" parameterType="map">
        UPDATE ADDRESS
        <set>
            NAME = #{addr.name},
            EMAIL = #{addr.email},
            ADDRESS = #{addr.address},
            ADDRGROUP = #{addr.addrGroup}
        </set>
        WHERE ID = #{id} AND PHONE = #{phone}
    </update>
    
    <insert id="insertAddr" parameterType="map">
        INSERT INTO ADDRESS (ID, NAME, PHONE, EMAIL, ADDRESS, ADDRGROUP)
        VALUES (#{id}, #{addr.name}, #{addr.phone}, #{addr.email}, #{addr.address}, #{addr.addrGroup})
    </insert>
    
    <delete id="deleteAddr" parameterType="map">
        DELETE FROM ADDRESS WHERE ID = #{id} AND PHONE = #{phone}
    </delete>
</mapper>